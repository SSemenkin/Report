#ifndef TELNETSEPARATECELL_H
#define TELNETSEPARATECELL_H

#include <QObject>
#include <QTcpSocket>
#include <QFile>
#include <QTimer>
#include "settings.h"

class TelnetSeparateCell : public QObject
{
    Q_OBJECT
public:
    explicit TelnetSeparateCell(QObject *parent = nullptr);
    ~TelnetSeparateCell();
    enum Operation{
        Default = 0,
        PrintSeparateCell = 1
    };
public slots:
    void getData(Operation choice,const QString cellName);

signals:
    void missSettings();
    void deleteMe();
    void errorCatched(const QString errorText);
    void success(const QString cellName);
    void timeout(const QString cellName);

private slots:
    void readData();
    void proccesingSeparateCell(QString text);
    bool subString(QString buff, QString findStr) const ;
    void moveToFile(const QString content, const QString filePath) const;
    bool isBSC03CELL(const QString cellName);

private:
    Operation state = Operation::Default;
    QTcpSocket *telnet;
    QString allRecievedData;
    Settings *settings;
    QString cell;
    QString ip, userName, password;
    QString _tg;
    QString responce;
    bool flag = false;


    QString cellListBSC03 = "LUG001A,LUG001B,LUG001C,LUG011A,LUG011B,LUG011C,LU1010A,LU1010B,LU1010C,LUG877A,LUG877B,LUG877C,LUG013A,LUG013B,LUG013C,LUG714A,LUG714B,LUG714C,LUG015A,LUG015B,LUG015C,LUG016A,LUG016B,LUG016C,LUG017A,LUG017B,LUG017C,LUG018A,LUG018B,LUG018C,LU1825A,LU1825B,LU1825C,LU1820A,LU1820B,LU1820C,LUG019A,LUG019B,LUG019C,LUG002A,LUG002B,LUG002C,LUG203A,LUG203B,LUG203C,LUG204A,LUG204B,LUG204C,LUG021A,LUG021B,LUG021C,LUG211A,LUG211B,LUG211C,LUG213A,LUG213B,LUG213C,LUG022A,LUG022B,LUG022C,LUG023A,LUG023B,LUG023C,LUG024A,LUG024B,LUG024C,LU1841A,LU1841B,LU1841C,LU1845A,LU1845B,LU1845C,LUG025A,LUG025B,LUG025C,LU1007A,LU1007B,LU1007C,LUG027A,LUG027B,LUG027C,LUG003A,LUG003B,LUG003C,LU1709A,LU1709B,LU1709C,LUG306A,LU1817A,LU1817B,LU1817C,LU1030A,LU1030B,LU1830A,LU1830B,LUG901A,LUG901B,LUG901C,LUG852A,LUG852B,LUG852C,LU1014A,LU1014B,LU1014C,LUG825A,LUG825B,LUG825C,LUG823A,LUG823B,LUG823C,LUG821A,LUG821B,LUG821C,LUG819A,LUG819B,LUG819C,LUG818A,LUG818B,LUG818C,LUG817A,LUG817B,LUG817C,LUG815A,LUG815B,LUG815C,LUG813A,LUG813B,LUG808A,LUG808B,LUG808C,LUG807A,LUG807B,LUG807C,LUG806A,LUG806B,LUG806C,LUG803A,LUG803B,LUG803C,LUG802A,LUG802B,LUG802C,LUG801A,LUG801B,LUG801C,LUG761A,LUG761B,LUG761C,LUG723A,LUG723B,LUG723C,LUG722A,LUG722B,LUG722C,LUG721A,LUG721B,LUG721C,LUG719A,LUG719B,LUG719C,LUG717A,LUG717B,LUG717C,LUG715A,LUG715B,LUG715C,LUG710A,LUG710B,LUG710C,LUG709A,LUG709B,LUG709C,LUG705A,LUG705B,LUG705C,LUG704A,LUG704B,LUG704C,LUG703A,LUG703B,LUG703C,LUG702A,LUG702B,LUG702C,LUG701A,LUG701B,LUG701C,LUG309A,LUG412A,LUG412B,LUG412C,LU1043A,LU1043B,LU1043C,LU1827A,LU1827B,LU1827C,LU1802A,LU1802B,LU1802C,LU1013A,LU1013B,LU1026A,LU1026B,LU1026C,LU1826A,LU1826B,LU1826C,LUG304A,LUG851A,LUG851B,LUG851C,LUG857A,LUG857B,LUG857C,LUG006A,LUG006B,LUG006C,LUG864A,LUG864B,LUG864C,LUG007A,LUG007B,LUG007C,LUG716A,LUG716B,LUG716C,LUG706A,LUG706B,LUG706C,LUG707A,LUG707B,LUG707C,LUG708A,LUG708B,LUG708C,LUG879A,LUG879B,LUG879C,LUG008A,LUG008B,LUG008C,LUG811A,LUG811B,LUG811C,LUG009A,LUG009B,LUG009C,LU1090A,LU1090B,LUG090A,LUG090B,LUG090C";
    QTimer timer;
};

#endif // TELNETSEPARATECELL_H
